/*
 * Mittwald API
 *
 * ## Introduction  This OpenAPI spec documents the mittwald API. It follows the [OpenAPI 3.0.0 specification](https://spec.openapis.org/oas/v3.0.0.html).  ## Authentication  You will need an API token to access the API. You can obtain one by logging into the [mStudio](https://studio.mittwald.de) and navigating to the [\"API Tokens\" section in the user menu](https://studio.mittwald.de/app/profile/api-tokens).  When making requests to the API, you can authenticate by passing your API token in the `X-Access-Token` header or as a bearer token.  ## Rate Limiting  Please note that usage of the API is rate-limited to prevent abuse. You can inspect the rate limiting for your current user by observing the `X-Ratelimit-*` headers included in each response.  ## mStudio  A main consumer of the mittwald API is the management interface for our customers, the [mStudio](https://studio.mittwald.de).  ## Contact and support  For support, please use the [mStudio support area](https://studio.mittwald.de/app/support/conversations) or drop us an email at [support@mittwald.de](mailto:support@mittwald.de).  For security issues, please report to [security@mittwald.de](mailto:security@mittwald.de). 
 *
 * The version of the OpenAPI document: 2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// DePeriodMittwaldPeriodV1PeriodAppPeriodUserInput : A UserInput is a description of an information which cannot be determined or estimated by mittwald, but has to be given by the person who is requesting an AppInstallation or SystemSoftware.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DePeriodMittwaldPeriodV1PeriodAppPeriodUserInput {
    /// Optional field to tell the frontend, which data to put into the select.
    #[serde(rename = "dataSource", skip_serializing_if = "Option::is_none")]
    pub data_source: Option<String>,
    #[serde(rename = "dataType")]
    pub data_type: models::DePeriodMittwaldPeriodV1PeriodAppPeriodUserInputDataType,
    #[serde(rename = "defaultValue", skip_serializing_if = "Option::is_none")]
    pub default_value: Option<String>,
    #[serde(rename = "format", skip_serializing_if = "Option::is_none")]
    pub format: Option<models::DePeriodMittwaldPeriodV1PeriodAppPeriodUserInputFormat>,
    #[serde(rename = "lifecycleConstraint")]
    pub lifecycle_constraint: models::DePeriodMittwaldPeriodV1PeriodAppPeriodAppInstallationLifecycle,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "positionMeta", skip_serializing_if = "Option::is_none")]
    pub position_meta: Option<Box<models::DePeriodMittwaldPeriodV1PeriodAppPeriodUserInputPositionMeta>>,
    #[serde(rename = "required")]
    pub required: bool,
    /// JSON Schema formatted (https://json-schema.org/).
    #[serde(rename = "validationSchema")]
    pub validation_schema: String,
}

impl DePeriodMittwaldPeriodV1PeriodAppPeriodUserInput {
    /// A UserInput is a description of an information which cannot be determined or estimated by mittwald, but has to be given by the person who is requesting an AppInstallation or SystemSoftware.
    pub fn new(data_type: models::DePeriodMittwaldPeriodV1PeriodAppPeriodUserInputDataType, lifecycle_constraint: models::DePeriodMittwaldPeriodV1PeriodAppPeriodAppInstallationLifecycle, name: String, required: bool, validation_schema: String) -> DePeriodMittwaldPeriodV1PeriodAppPeriodUserInput {
        DePeriodMittwaldPeriodV1PeriodAppPeriodUserInput {
            data_source: None,
            data_type,
            default_value: None,
            format: None,
            lifecycle_constraint,
            name,
            position_meta: None,
            required,
            validation_schema,
        }
    }
}

